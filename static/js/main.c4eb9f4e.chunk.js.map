{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","store/todos.ts","store/loading.ts","store/currentTodo.ts","store/index.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Selector","actions","todos","type","payload","currentTodo","rootReducer","combineReducers","action","loading","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useSelector","TodoInfo","todo","className","id","classNames","completed","title","TodoList","onSetModalVisibility","dispatch","useDispatch","map","onClick","currentTodoActons","TodoFilter","onSetVisibleTodos","navigation","useNavigate","location","useLocation","searchParams","URLSearchParams","search","appliedQuery","get","useState","query","setQuery","applyQuery","useCallback","debounce","newQuery","set","delete","replace","appliedSelect","selectFilter","setSelectFilter","selectFilterCallback","str","includes","active","pickFilterParam","useEffect","filter","toLowerCase","onChange","target","value","all","placeholder","event","length","style","pointerEvents","Loader","TodoModal","selectedTodo","currentUser","onModalClosing","href","email","name","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","isLoading","state","user","setUser","isModalVisible","setModalVisbility","visibleTodos","setVisibleTodos","loadingActions","todosFromServer","todosActions","finally","userId","currentTodoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4eb9f4e.chunk.js","sourcesContent":["import debounce from 'lodash.debounce';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSetVisibleTodos: React.Dispatch<React.SetStateAction<Todo[]>>\n}\n\nenum Selector {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onSetVisibleTodos }) => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigation(`?${searchParams}`, { replace: true });\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const appliedSelect = searchParams.get('select') || '';\n  const [selectFilter, setSelectFilter] = useState(appliedSelect);\n\n  const handleSelectChange = ({\n    target,\n  }: React.ChangeEvent<HTMLSelectElement>) => {\n    if (target.value === Selector.all) {\n      searchParams.delete('select');\n    } else {\n      searchParams.set('select', target.value);\n    }\n\n    navigation(`?${searchParams}`, { replace: true });\n    setSelectFilter(target.value);\n  };\n\n  const selectFilterCallback = (todo: Todo) => {\n    const pickFilterParam = (str: string) => {\n      switch (location.search.includes(str)) {\n        case str === '':\n          return todo;\n\n        case str === Selector.active:\n          return !todo.completed;\n\n        case str === Selector.completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    };\n\n    return pickFilterParam(selectFilter || '');\n  };\n\n  useEffect(() => {\n    onSetVisibleTodos(todos\n      .filter(selectFilterCallback)\n      .filter(todo => todo.title.toLowerCase()\n        .includes(appliedQuery.toLowerCase())));\n  }, [appliedQuery, selectFilter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n            value={appliedSelect || 'all'}\n          >\n            <option value={Selector.all}>All</option>\n            <option value={Selector.active}>Active</option>\n            <option value={Selector.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSetVisibleTodos(todos);\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nexport type TodosAction = SetTodosAction;\n\nexport const todosReducer = (\n  todos: Todo[] = [],\n  action: TodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport const actions = {\n  setTodos: (todos: Todo[]): SetTodosAction => ({\n    type: 'todos/SET',\n    payload: todos,\n  }),\n};\n","type StartLoadingAction = {\n  type: 'loading/START_LOADING',\n};\n\ntype FinishLoadingAction = {\n  type: 'loading/FINISH_LOADING',\n};\n\nexport type LoadingAction = (\n  StartLoadingAction\n  | FinishLoadingAction\n);\n\nexport const loadingReducer = (\n  loading = false,\n  action: LoadingAction,\n) => {\n  switch (action.type) {\n    case 'loading/START_LOADING':\n      return true;\n\n    case 'loading/FINISH_LOADING':\n      return false;\n\n    default:\n      return loading;\n  }\n};\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({\n    type: 'loading/START_LOADING',\n  }),\n\n  finishLoading: (): FinishLoadingAction => ({\n    type: 'loading/FINISH_LOADING',\n  }),\n};\n","import { Todo } from '../types/Todo';\n\ntype SetCurrentTodoAction = {\n  type: 'currentTodo/SET',\n  payload: Todo,\n};\n\ntype ResetCurrentTodoAction = {\n  type: 'currentTodo/RESET'\n  payload: null,\n};\n\nexport type CurrentTodoAction = SetCurrentTodoAction | ResetCurrentTodoAction;\n\nexport const currentTodoReducer = (\n  currentTodo: Todo | null = null,\n  action: CurrentTodoAction,\n): Todo | null => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/RESET':\n      return action.payload;\n\n    default:\n      return currentTodo;\n  }\n};\n\nexport const actions = {\n  setTodo: (currentTodo: Todo): CurrentTodoAction => ({\n    type: 'currentTodo/SET',\n    payload: currentTodo,\n  }),\n\n  resetTodo: (): CurrentTodoAction => ({\n    type: 'currentTodo/RESET',\n    payload: null,\n  }),\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { todosReducer } from './todos';\nimport { loadingReducer } from './loading';\nimport { currentTodoReducer } from './currentTodo';\n\nconst rootReducer = combineReducers({\n  todos: todosReducer,\n  currentTodo: currentTodoReducer,\n  loading: loadingReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td\n        className=\"is-vcentered\"\n      >\n        <i className={classNames('fas', {\n          'fa-check-square has-text-success': todo.completed,\n          'fa-exclamation-triangle has-text-danger': !todo.completed,\n        })}\n        />\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n        }, {\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as currentTodoActons } from '../../store/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  onSetModalVisibility: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSetModalVisibility,\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <TodoInfo todo={todo} />\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  dispatch(currentTodoActons.setTodo(todo));\n                  onSetModalVisibility(true);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo | null\n  currentUser: User | null\n  onModalClosing: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  currentUser,\n  onModalClosing,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            {selectedTodo && (\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n            )}\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClosing}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            {selectedTodo && (\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n            )}\n\n            {currentUser && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed && (\n                  <strong className=\"has-text-success\">Done</strong>\n                )}\n                {!selectedTodo?.completed && (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n\n                <a href={`mailto:${currentUser.email}`}>\n                  {currentUser.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nimport './App.scss';\nimport { useAppSelector } from './store';\nimport { actions as loadingActions } from './store/loading';\nimport { actions as todosActions } from './store/todos';\nimport { actions as currentTodoActions } from './store/currentTodo';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useAppSelector(state => state.loading);\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const [user, setUser] = useState<User | null>(null);\n  const [isModalVisible, setModalVisbility] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n\n    getTodos()\n      .then(todosFromServer => {\n        dispatch(todosActions.setTodos(todosFromServer));\n        setVisibleTodos(todosFromServer);\n      })\n      .finally(() => dispatch(loadingActions.finishLoading()));\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(currentUser => setUser(currentUser));\n    }\n  }, [isModalVisible]);\n\n  const handleModalClosing = () => {\n    dispatch(currentTodoActions.resetTodo());\n    setUser(null);\n    setModalVisbility(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"section\">\n            <div className=\"container\">\n              <div className=\"box\">\n                <h1 className=\"title\">Redux list of todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter\n                    todos={todos}\n                    onSetVisibleTodos={setVisibleTodos}\n                  />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    onSetModalVisibility={setModalVisbility}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      {isModalVisible && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          currentUser={user}\n          onModalClosing={handleModalClosing}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}